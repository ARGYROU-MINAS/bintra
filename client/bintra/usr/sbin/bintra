#!/bin/bash

exec 3>&1 4>&2
trap 'exec 2>&4 1>&3' 0 1 2 3
exec 1>>/var/log/bintra.log 2>&1

echo "Got called with optional args: '$@'"

bintraVersion=1.0.4

if [ -f "/etc/bintra.conf" ]; then
  . /etc/bintra.conf
  echo "Config file read"
else
  echo "File /etc/bintra.conf missing"
  exit -2
fi

while IFS='$\n' read -r line; do
  echo "input '$line' received"

  tmp_dir=$(mktemp -d -t bintra-XXXXXXXXXX)
  echo "Work in $tmp_dir"
  cd $tmp_dir

  packageHash=$(sha256sum -b $line | cut -d" " -f1 | xargs)
  echo "Hash: $packageHash"

  cp $line package.deb
  ar x package.deb
  ls -l
  tar xf control.tar.?z

  packageName=$(cat control | grep "Package" | cut -d":" -f2- | xargs)
  packageVersion=$(cat control | grep "Version" | cut -d":" -f2- | xargs)
  packageArch=$(cat control | grep "Architecture" | cut -d":" -f2- | xargs)

  APIREPLY=$(curl -X PUT -G "https://api.bintra.directory/v1/package" --data-urlencode "packageName=$packageName" --data-urlencode "packageVersion=$packageVersion" --data-urlencode "packageArch=$packageArch" --data-urlencode "packageFamily=debian" --data-urlencode "packageHash=$packageHash" -H "Authorization: Bearer ${JWT}" -H "accept: application/json" --silent --show-error --user-agent "bintra/$bintraVersion")
  echo "APIreply: $APIREPLY"
  if [ "$APIREPLY" = "Error: Access Denied" ];
  then
    echo "Access denied, JWT invalid?"
    exit -3
  fi;
  REPLYLENGTH=$(echo $APIREPLY|jq 'length')
  if (( $REPLYLENGTH > 1 ));
  then
    echo "Multiple matches, be alarmed"
    HASHMATCHCOUNT=$(echo $APIREPLY|jq '.[] | select(.hash=="$packageHash").count')
    HASHMISMATCHCOUNT=$(echo $APIREPLY|jq '.[] | select(.hash!="$packageHash").count')
    echo "Your hash was found $HASHMATCHCOUNT times versus $HASHMISMATCHCOUNT other ones"
    if (( $HASHMATCHCOUNT <= $BADCOUNT ));
    then
      echo "We abort here"
      logger -p local0.warn "Package $packageName might be dangerous"
      exit -1
    else
      echo "Seems still OK to me"
      logger -p local0.info "Package $packageName still OK"
    fi;
  else
    HASHMATCHCOUNT=$(echo $APIREPLY|jq '.[].count')
    echo "All is fine, we had $HASHMATCHCOUNT uses of that hash"
    logger -p local0.info "Package $packageName OK"
  fi;

  cd /tmp
  rm -rf $tmp_dir
done
