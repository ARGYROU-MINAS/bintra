# bintra gitlab CI definition
# we got tagged, so publish it


.myglobals:
  tags:
    - docker

image: node:16
cache:
  paths:
    - node_modules/
variables:
  versionTag: "$CI_COMMIT_SHA"
  NEXUS_URL_RPM: "https://nexus.myocastor.de/repository/bintra_rpm/"
  NEXUS_URL_DEB: "https://nexus.myocastor.de/repository/bintra/"

makedocs:
  extends:
    - .myglobals
  stage: build
  image: "$CI_REGISTRY/kai/lggr:mkdocs"
  before_script:
    - mkdir pub_mkdocs
  script:
    - mkdocs build
  artifacts:
    paths:
      - pub_mkdocs

jsdocs:
  extends:
    - .myglobals
  stage: build
  before_script:
    - npm install
  script:
    - "./node_modules/.bin/jsdoc --verbose -c jsdoc.json"
  artifacts:
    paths:
      - out

prepare_job:
  stage: build                                              # This stage must run before the release stage
  script:
    - echo "TAG=$(git describe --abbrev=0)" >> variables.env             # and append to the variables.env file
  artifacts:
    reports:
      dotenv: variables.env                                   # Use artifacts:reports:dotenv to expose the variables to other jobs

unittest:
  services:
    - name: mongo:5
      alias: mongo
  extends:
    - .myglobals
  stage: test
  image: "$CI_REGISTRY/kgroup/bintra:fat"
  variables:
    NODE_ENV: test
  needs: []
  before_script:
    - "/etc/init.d/mosquitto start"
    - "/etc/init.d/redis-server start"
    - npm install
    - ping -c 3 mongo
    - echo "show dbs" | mongosh --host mongo
    - echo "use bintra" | mongosh --host mongo
    - "./setup_env_test.sh"
  script:
    - npm run combined
  after_script:
    - echo "show dbs" | mongosh --host mongo
  coverage: "/Statements\\s+:\\s+(\\d+\\.\\d+)%/"
  allow_failure: false
  artifacts:
    when: always
    paths:
      - mochawesome-report/
      - coverage/
      - junit-custom.xml
      - xunit.xml
      - testlink.xml
    reports:
      junit: junit-custom.xml

pages:
  extends:
    - .myglobals
  stage: deploy
  image: alpine
  needs: ["makedocs","jsdocs","unittest"]
  before_script:
    - mkdir public
    - mkdir public/jsdoc
    - mkdir public/mocha
  script:
    - cp -a pub_mkdocs/* public/
    - cp -a out/* public/jsdoc/
    - cp -a mochawesome-report/* public/mocha/
  artifacts:
    paths:
      - public

debPublish:
  extends:
    - .myglobals
  stage: deploy
  image: "$CI_REGISTRY/kgroup/bintra:deb"
  before_script:
    - echo "${GPG_SIGNER_KEY_PUB}" >public.asc
    - echo "${GPG_SIGNER_KEY_PRIV}" >private.asc
    - echo "${GPG_SIGNER_PASSWD}" >/pwd.txt
    - gpg --import public.asc
    - gpg --import --batch --yes --passphrase ${GPG_SIGNER_PASSWD} private.asc
  script:
    - cd client
    - chmod -R 644 .
    - find . -type d -exec chmod 755 {} \;
    - chmod 755 bintra/usr/sbin/bintra
    - dpkg-deb --root-owner-group --build bintra
    - export GPG_TTY=$(tty) && dpkg-sig -k 373E4C67CD0AA78828BE31FBD0C855D432558284 --sign builder bintra.deb --gpg-options "--batch --no-tty --pinentry-mode loopback --yes --passphrase ${GPG_SIGNER_PASSWD}"
    - dpkg-sig --verify bintra.deb
    - 'mv bintra.deb bintra_$(cat bintra/DEBIAN/control | grep "^Version:" | cut -d":" -f2- | xargs)_all.deb'
    - ls -l
    - 'curl --user ${NEXUS_USER}:${NEXUS_PASSWD} -H "Content-Type: multipart/form-data" --data-binary @$(ls -1 bintra*deb) ${NEXUS_URL_DEB}'
  artifacts:
    paths:
      - client/*.deb

rpmPublish:
  extends:
    - .myglobals
  stage: deploy
  parallel:
    matrix:
      - FAMILY: ['fedora:33', 'fedora:34', 'centos:8']
  image: ${FAMILY}
  before_script:
    - dnf -y -q update
    - dnf -y -q install git rpm-build rpmdevtools rpm-sign gpg
    - echo "${GPG_SIGNER_KEY_PUB}" >public.asc
    - echo "${GPG_SIGNER_KEY_PRIV}" >private.asc
    - echo "${GPG_SIGNER_PASSWD}" >/passphrase.txt
    - gpg --import public.asc
    - gpg --import --batch --yes --passphrase ${GPG_SIGNER_PASSWD} private.asc
    - rpm --import public.asc
    - echo "URL to publish to ${NEXUS_URL_RPM}"
  script:
    - rpmdev-setuptree
    - cat client/dnf/append_rpmmacros >>~/.rpmmacros
    - cd ~/rpmbuild
    - cp /builds/kgroup/bintra/client/dnf/bintra.spec SPECS/
    - rpmbuild -bb SPECS/bintra.spec
    - rpm --addsign RPMS/noarch/*.rpm
    - 'curl --user ${NEXUS_USER}:${NEXUS_PASSWD} --upload-file `find RPMS/ -type f` ${NEXUS_URL_RPM}'

release_job:
  stage: deploy
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  needs:
    - job: prepare_job
      artifacts: true
  script:
    - echo "running release_job for $TAG"
  release:
    name: 'Release $TAG'
    description: 'Created using the release-cli'
    tag_name: '$TAG'
    ref: '$CI_COMMIT_SHA'

publish:
  extends:
    - .myglobals
  stage: deploy
  image: ubuntu:latest
  variables:
    GIT_STRATEGY: none
  cache: {}
  dependencies: []
  before_script:
    - which ssh-agent || ( apt-get update -y && apt-get install -y -qq openssh-client)
    - mkdir -p ~/.ssh
    - chmod 0700 ~/.ssh
    - eval $(ssh-agent -s)
    - echo "$SSH_CI_PRIV" | tr -d '\r' | ssh-add -
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    - echo "Expect error 502 from here" && date
  script:
    - ssh ansi@ctl.myocastor.de "cd playbooks && ansible-playbook apiupdate.yml"
  after_script:
    - echo "Now no more error 502 expected" && date

sentry:
  stage: deploy
  image: getsentry/sentry-cli
  script:
    - export SENTRY_URL=$SENTRY_BASE_URL
    - export SENTRY_AUTH_TOKEN=$SENTRY_BASE_TOKEN
    - export SENTRY_ORG=kretschmann
    - export SENTRY_PROJECT=bintra
    - export SENTRY_LOG_LEVEL=debug
    - export VERSION=bintra@$(sentry-cli releases propose-version)
    - sentry-cli releases new bintra@$CI_COMMIT_SHA
    - sentry-cli releases set-commits --auto $VERSION
    - sentry-cli releases files "$VERSION" upload-sourcemaps mochawesome-report/assets/

