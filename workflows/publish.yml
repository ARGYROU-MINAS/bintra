# bintra gitlab CI definition
# we got tagged, so publish it


.myglobals:
  tags:
    - docker

image: node:16
cache:
  paths:
    - node_modules/
variables:
  versionTag: "$CI_COMMIT_SHA"
  NEXUS_URL_RPM: "https://nexus.myocastor.de/repository/bintra_rpm/"
  NEXUS_URL_DEB: "https://nexus.myocastor.de/repository/bintra/"

makedocs:
  extends:
    - .myglobals
  stage: build
  image: "$CI_REGISTRY/kai/lggr:mkdocs"
  before_script:
    - mkdir pub_mkdocs
  script:
    - mkdocs build
  artifacts:
    paths:
      - pub_mkdocs

jsdocs:
  extends:
    - .myglobals
  stage: build
  before_script:
    - npm install
  script:
    - "./node_modules/.bin/jsdoc --verbose -c jsdoc.json"
  artifacts:
    paths:
      - out

prepare_job:
  stage: build                                              # This stage must run before the release stage
  script:
    - echo "TAG=$(git describe --abbrev=0)" >> variables.env             # and append to the variables.env file
  artifacts:
    reports:
      dotenv: variables.env                                   # Use artifacts:reports:dotenv to expose the variables to other jobs

unittest:
  services:
    - name: mongo:5
      alias: mongo
    - name: redis:6
      alias: redis
    - name: "$CI_REGISTRY/kgroup/bintra:mqtt"
      alias: mqtt
  extends:
    - .myglobals
  stage: test
  image: "$CI_REGISTRY/kgroup/bintra:fat"
  variables:
    NODE_ENV: test
  needs: []
  before_script:
    - npm install
    - ping -c 3 mongo
    - ping -c 3 redis
    - ping -c 3 mqtt
    - mongosh --host mongo <testutils/cleanup.js
    - echo "show dbs" | mongosh --host mongo
    - "./setup_env_test.sh"
  script:
    - npm run combined test/api_* test/server_adminsummary.js test/server_summary.js test/server_common.js test/server_admuser.js test/server_delpackage.js  test/server_feeds.js test/server_packages.js test/server_queue.js test/server_roles.js test/server_putpackage.js test/local_*
  after_script:
    - echo "show dbs" | mongosh --host mongo
  coverage: "/Statements\\s+:\\s+(\\d+\\.\\d+)%/"
  allow_failure: false
  artifacts:
    when: always
    paths:
      - mochawesome-report/
      - coverage/
      - junit-custom.xml
      - xunit.xml
      - testlink.xml
    reports:
      junit: junit-custom.xml

pages:
  extends:
    - .myglobals
  stage: deploy
  image: alpine
  needs: ["makedocs","jsdocs","unittest"]
  before_script:
    - mkdir public
    - mkdir public/jsdoc
    - mkdir public/mocha
  script:
    - cp -a pub_mkdocs/* public/
    - cp -a out/* public/jsdoc/
    - cp -a mochawesome-report/* public/mocha/
  artifacts:
    paths:
      - public

release_job:
  stage: deploy
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  needs:
    - job: prepare_job
      artifacts: true
  script:
    - echo "running release_job for $TAG"
  release:
    name: 'Release $TAG'
    description: 'Created using the release-cli'
    tag_name: '$TAG'
    ref: '$CI_COMMIT_SHA'

publish:
  extends:
    - .myglobals
  stage: deploy
  image: ubuntu:latest
  variables:
    GIT_STRATEGY: none
  cache: {}
  dependencies: []
  before_script:
    - which ssh-agent || ( apt-get update -y && apt-get install -y -qq openssh-client)
    - mkdir -p ~/.ssh
    - chmod 0700 ~/.ssh
    - eval $(ssh-agent -s)
    - echo "$SSH_CI_PRIV" | tr -d '\r' | ssh-add -
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    - echo "Expect error 502 from here" && date
  script:
    - ssh ansi@ctl.myocastor.de "cd playbooks && ansible-playbook apiupdate.yml"
  environment:
    name: production
  after_script:
    - echo "Now no more error 502 expected" && date

sentry:
  stage: deploy
  image: getsentry/sentry-cli
  script:
    - export SENTRY_URL=$SENTRY_BASE_URL
    - export SENTRY_AUTH_TOKEN=$SENTRY_BASE_TOKEN
    - export SENTRY_ORG=kretschmann
    - export SENTRY_PROJECT=bintra
    - export SENTRY_LOG_LEVEL=debug
    - export VERSION=bintra@$CI_COMMIT_TAG
    - sentry-cli releases new "$VERSION"
    - sentry-cli releases set-commits --auto "$VERSION"
    - sentry-cli releases files "$VERSION" upload-sourcemaps mochawesome-report/assets/
    - sentry-cli releases deploys "$VERSION" new -e production
    - sentry-cli releases finalize "$VERSION"

