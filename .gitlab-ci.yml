stages:
  - build
  - test
  - analyze
  - deploy

# Official framework image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/node/tags/
image: node:14

# This folder is cached between builds
# http://docs.gitlab.com/ee/ci/yaml/README.html#cache
cache:
  paths:
    - node_modules/

variables:
  versionTag: '$CI_COMMIT_SHA'

makedocs:
  stage: build
  image: $CI_REGISTRY/kai/lggr:mkdocs
  before_script:
  - mkdir pub_mkdocs
  script:
  - mkdocs build
  artifacts:
    paths:
    - pub_mkdocs

jsdocs:
  stage: build
  before_script:
  - npm install
  script:
  - ./node_modules/.bin/jsdoc --verbose -c jsdoc.json
  artifacts:
    paths:
    - out

unittest:
  stage: test
  image: $CI_REGISTRY/kai/bintra:fat
  variables:
    NODE_ENV: test
  before_script:
  - /etc/init.d/mongodb start
  - npm install
  - ./setup_env_test.sh
  script:
  - npm run combined
  coverage: '/Statements\s+:\s+(\d+\.\d+)%/'
  after_script:
    - ls -l
  artifacts:
    paths:
    - mochawesome-report/
    - coverage/
    - xunit.xml 

sonarqube:
  stage: analyze
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"
  before_script:
    - git fetch --unshallow
  script:
    - sonar-scanner -Dsonar.qualitygate.wait=true -Dsonar.branch.name=${CI_COMMIT_REF_SLUG}
  allow_failure: false

pages:
  stage: deploy
  image: alpine
  before_script:
  - mkdir public
  - mkdir public/jsdoc
  - mkdir public/mocha
  script:
  - cp -a pub_mkdocs/* public/
  - cp -a out/* public/jsdoc/
  - cp -a mochawesome-report/* public/mocha/
  artifacts:
    paths:
    - public
  only:
    refs:
      - master

package:
  stage: deploy
  image: $CI_REGISTRY/kai/bintra:deb
  script:
  - cd client && chmod -R 644 . && find . -type d -exec chmod 755 {} \; && chmod 755 bintra/usr/sbin/bintra && dpkg-deb --root-owner-group --build bintra
  artifacts:
    paths:
    - client/bintra.deb

publish:
  stage: deploy
  image: ubuntu:latest
  variables:
    GIT_STRATEGY: none
  before_script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install -y -qq openssh-client )'
    - mkdir -p ~/.ssh
    - chmod 0700 ~/.ssh
    - eval $(ssh-agent -s)
    - echo "$SSH_CI_PRIV" | tr -d '\r' | ssh-add -
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  script:
    - ssh ansi@ctl.myocastor.de "cd playbooks && ansible-playbook apiupdate.yml"
  only:
    - master
