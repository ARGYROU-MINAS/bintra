---
version: '3'

services:
  database:
    image: mongo:5
    container_name: 'bintra-mongo'
    restart: unless-stopped
    cap_drop:
      - ALL
    cap_add:
      - cap_dac_override
      - cap_setgid
      - cap_setuid
    env_file: .env.docker
    environment:
      - MONGO_INITDB_DATABASE=bintra
    volumes:
      - dbdata:/data/db
    networks:
      - bintra-network
    healthcheck:
      test: echo 'db.stats().ok' | mongo localhost:27017/bintra --quiet
      interval: 5s
      timeout: 5s
      retries: 12

  redis:
    image: redis:6
    container_name: 'bintra-redis'
    restart: unless-stopped
    env_file: .env.docker
    networks:
      - bintra-network

  mqtt:
    image: registry.kretschmann.software/kgroup/bintra:mqtt
    container_name: 'bintra-mqtt'
    restart: unless-stopped
    env_file: .env.docker
    networks:
      - bintra-network

  nodejs:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: 'bintra-nodejs'
    restart: unless-stopped
    cap_drop:
      - ALL
    depends_on:
      - database
    env_file: .env.docker
    environment:
      - NODE_ENV=docker
      - MONGO_HOSTNAME=database
    ports:
      - "8087:8080"
    networks:
      - bintra-network
    command: npm start
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:8080/docs/"]
      interval: 30s
      timeout: 5s
      retries: 3

networks:
  bintra-network:
    driver: bridge

volumes:
  dbdata:
